
excercises.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000320  08000194  08000194  00010194  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080004b4  080004bc  000104bc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080004b4  080004b4  000104bc  2**0
                  CONTENTS
  4 .ARM          00000000  080004b4  080004b4  000104bc  2**0
                  CONTENTS
  5 .preinit_array 00000000  080004b4  080004bc  000104bc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080004b4  080004b4  000104b4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080004b8  080004b8  000104b8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  000104bc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  080004bc  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  080004bc  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 0000002a  00000000  00000000  000104bc  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000754  00000000  00000000  000104e6  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 000001f0  00000000  00000000  00010c3a  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 000000a8  00000000  00000000  00010e30  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 00000080  00000000  00000000  00010ed8  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  0000121c  00000000  00000000  00010f58  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   00000985  00000000  00000000  00012174  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    000049fe  00000000  00000000  00012af9  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  000174f7  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000001d4  00000000  00000000  00017574  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

08000194 <__do_global_dtors_aux>:
 8000194:	b510      	push	{r4, lr}
 8000196:	4c05      	ldr	r4, [pc, #20]	; (80001ac <__do_global_dtors_aux+0x18>)
 8000198:	7823      	ldrb	r3, [r4, #0]
 800019a:	b933      	cbnz	r3, 80001aa <__do_global_dtors_aux+0x16>
 800019c:	4b04      	ldr	r3, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x1c>)
 800019e:	b113      	cbz	r3, 80001a6 <__do_global_dtors_aux+0x12>
 80001a0:	4804      	ldr	r0, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x20>)
 80001a2:	f3af 8000 	nop.w
 80001a6:	2301      	movs	r3, #1
 80001a8:	7023      	strb	r3, [r4, #0]
 80001aa:	bd10      	pop	{r4, pc}
 80001ac:	20000000 	.word	0x20000000
 80001b0:	00000000 	.word	0x00000000
 80001b4:	0800049c 	.word	0x0800049c

080001b8 <frame_dummy>:
 80001b8:	b508      	push	{r3, lr}
 80001ba:	4b03      	ldr	r3, [pc, #12]	; (80001c8 <frame_dummy+0x10>)
 80001bc:	b11b      	cbz	r3, 80001c6 <frame_dummy+0xe>
 80001be:	4903      	ldr	r1, [pc, #12]	; (80001cc <frame_dummy+0x14>)
 80001c0:	4803      	ldr	r0, [pc, #12]	; (80001d0 <frame_dummy+0x18>)
 80001c2:	f3af 8000 	nop.w
 80001c6:	bd08      	pop	{r3, pc}
 80001c8:	00000000 	.word	0x00000000
 80001cc:	20000004 	.word	0x20000004
 80001d0:	0800049c 	.word	0x0800049c

080001d4 <GPIO_Init>:
*
* @Note			     : none
*
*/
void GPIO_Init (GPIO_Handle_t *pGPIOHandle)
{
 80001d4:	b480      	push	{r7}
 80001d6:	b085      	sub	sp, #20
 80001d8:	af00      	add	r7, sp, #0
 80001da:	6078      	str	r0, [r7, #4]
	//1. Configuration the mode of pin
		uint32_t temp =0;
 80001dc:	2300      	movs	r3, #0
 80001de:	60fb      	str	r3, [r7, #12]


		if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode < 4){
 80001e0:	687b      	ldr	r3, [r7, #4]
 80001e2:	799b      	ldrb	r3, [r3, #6]
 80001e4:	2b03      	cmp	r3, #3
 80001e6:	d81f      	bhi.n	8000228 <GPIO_Init+0x54>

		temp = pGPIOHandle->GPIO_PinConfig.GPIO_PinMode << (2*pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80001e8:	687b      	ldr	r3, [r7, #4]
 80001ea:	799b      	ldrb	r3, [r3, #6]
 80001ec:	461a      	mov	r2, r3
 80001ee:	687b      	ldr	r3, [r7, #4]
 80001f0:	791b      	ldrb	r3, [r3, #4]
 80001f2:	005b      	lsls	r3, r3, #1
 80001f4:	fa02 f303 	lsl.w	r3, r2, r3
 80001f8:	60fb      	str	r3, [r7, #12]
		pGPIOHandle->pGPIOx->MODER &= ~(3<< (2*pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80001fa:	687b      	ldr	r3, [r7, #4]
 80001fc:	681b      	ldr	r3, [r3, #0]
 80001fe:	681a      	ldr	r2, [r3, #0]
 8000200:	687b      	ldr	r3, [r7, #4]
 8000202:	791b      	ldrb	r3, [r3, #4]
 8000204:	005b      	lsls	r3, r3, #1
 8000206:	2103      	movs	r1, #3
 8000208:	fa01 f303 	lsl.w	r3, r1, r3
 800020c:	43db      	mvns	r3, r3
 800020e:	4619      	mov	r1, r3
 8000210:	687b      	ldr	r3, [r7, #4]
 8000212:	681b      	ldr	r3, [r3, #0]
 8000214:	400a      	ands	r2, r1
 8000216:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER |= temp;
 8000218:	687b      	ldr	r3, [r7, #4]
 800021a:	681b      	ldr	r3, [r3, #0]
 800021c:	6819      	ldr	r1, [r3, #0]
 800021e:	687b      	ldr	r3, [r7, #4]
 8000220:	681b      	ldr	r3, [r3, #0]
 8000222:	68fa      	ldr	r2, [r7, #12]
 8000224:	430a      	orrs	r2, r1
 8000226:	601a      	str	r2, [r3, #0]
		}

		else{
				// Interrupt
		};
		temp = 0;
 8000228:	2300      	movs	r3, #0
 800022a:	60fb      	str	r3, [r7, #12]

	//2. Speed Configuration

		temp = pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << (2*pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800022c:	687b      	ldr	r3, [r7, #4]
 800022e:	795b      	ldrb	r3, [r3, #5]
 8000230:	461a      	mov	r2, r3
 8000232:	687b      	ldr	r3, [r7, #4]
 8000234:	791b      	ldrb	r3, [r3, #4]
 8000236:	005b      	lsls	r3, r3, #1
 8000238:	fa02 f303 	lsl.w	r3, r2, r3
 800023c:	60fb      	str	r3, [r7, #12]
		pGPIOHandle->pGPIOx->OSPEEDR &= ~(3<<(2*pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 800023e:	687b      	ldr	r3, [r7, #4]
 8000240:	681b      	ldr	r3, [r3, #0]
 8000242:	689a      	ldr	r2, [r3, #8]
 8000244:	687b      	ldr	r3, [r7, #4]
 8000246:	791b      	ldrb	r3, [r3, #4]
 8000248:	005b      	lsls	r3, r3, #1
 800024a:	2103      	movs	r1, #3
 800024c:	fa01 f303 	lsl.w	r3, r1, r3
 8000250:	43db      	mvns	r3, r3
 8000252:	4619      	mov	r1, r3
 8000254:	687b      	ldr	r3, [r7, #4]
 8000256:	681b      	ldr	r3, [r3, #0]
 8000258:	400a      	ands	r2, r1
 800025a:	609a      	str	r2, [r3, #8]
		pGPIOHandle->pGPIOx->OSPEEDR |= temp;
 800025c:	687b      	ldr	r3, [r7, #4]
 800025e:	681b      	ldr	r3, [r3, #0]
 8000260:	6899      	ldr	r1, [r3, #8]
 8000262:	687b      	ldr	r3, [r7, #4]
 8000264:	681b      	ldr	r3, [r3, #0]
 8000266:	68fa      	ldr	r2, [r7, #12]
 8000268:	430a      	orrs	r2, r1
 800026a:	609a      	str	r2, [r3, #8]

		temp = 0;
 800026c:	2300      	movs	r3, #0
 800026e:	60fb      	str	r3, [r7, #12]

	//3. Pupd Configuration
		temp = pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdCont << (2* pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000270:	687b      	ldr	r3, [r7, #4]
 8000272:	79db      	ldrb	r3, [r3, #7]
 8000274:	461a      	mov	r2, r3
 8000276:	687b      	ldr	r3, [r7, #4]
 8000278:	791b      	ldrb	r3, [r3, #4]
 800027a:	005b      	lsls	r3, r3, #1
 800027c:	fa02 f303 	lsl.w	r3, r2, r3
 8000280:	60fb      	str	r3, [r7, #12]
		pGPIOHandle->pGPIOx->PUPDR &= ~(3<< (2* pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000282:	687b      	ldr	r3, [r7, #4]
 8000284:	681b      	ldr	r3, [r3, #0]
 8000286:	68da      	ldr	r2, [r3, #12]
 8000288:	687b      	ldr	r3, [r7, #4]
 800028a:	791b      	ldrb	r3, [r3, #4]
 800028c:	005b      	lsls	r3, r3, #1
 800028e:	2103      	movs	r1, #3
 8000290:	fa01 f303 	lsl.w	r3, r1, r3
 8000294:	43db      	mvns	r3, r3
 8000296:	4619      	mov	r1, r3
 8000298:	687b      	ldr	r3, [r7, #4]
 800029a:	681b      	ldr	r3, [r3, #0]
 800029c:	400a      	ands	r2, r1
 800029e:	60da      	str	r2, [r3, #12]
		pGPIOHandle->pGPIOx->PUPDR |= temp;
 80002a0:	687b      	ldr	r3, [r7, #4]
 80002a2:	681b      	ldr	r3, [r3, #0]
 80002a4:	68d9      	ldr	r1, [r3, #12]
 80002a6:	687b      	ldr	r3, [r7, #4]
 80002a8:	681b      	ldr	r3, [r3, #0]
 80002aa:	68fa      	ldr	r2, [r7, #12]
 80002ac:	430a      	orrs	r2, r1
 80002ae:	60da      	str	r2, [r3, #12]
		temp = 0;
 80002b0:	2300      	movs	r3, #0
 80002b2:	60fb      	str	r3, [r7, #12]

	//4. Output Type Configuration
		temp = pGPIOHandle->GPIO_PinConfig.GPIO_PinOtyp << (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80002b4:	687b      	ldr	r3, [r7, #4]
 80002b6:	7a1b      	ldrb	r3, [r3, #8]
 80002b8:	461a      	mov	r2, r3
 80002ba:	687b      	ldr	r3, [r7, #4]
 80002bc:	791b      	ldrb	r3, [r3, #4]
 80002be:	fa02 f303 	lsl.w	r3, r2, r3
 80002c2:	60fb      	str	r3, [r7, #12]
		pGPIOHandle->pGPIOx->OTYPER &= ~(1<< (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80002c4:	687b      	ldr	r3, [r7, #4]
 80002c6:	681b      	ldr	r3, [r3, #0]
 80002c8:	685a      	ldr	r2, [r3, #4]
 80002ca:	687b      	ldr	r3, [r7, #4]
 80002cc:	791b      	ldrb	r3, [r3, #4]
 80002ce:	4619      	mov	r1, r3
 80002d0:	2301      	movs	r3, #1
 80002d2:	408b      	lsls	r3, r1
 80002d4:	43db      	mvns	r3, r3
 80002d6:	4619      	mov	r1, r3
 80002d8:	687b      	ldr	r3, [r7, #4]
 80002da:	681b      	ldr	r3, [r3, #0]
 80002dc:	400a      	ands	r2, r1
 80002de:	605a      	str	r2, [r3, #4]
		pGPIOHandle->pGPIOx->OTYPER |= temp;
 80002e0:	687b      	ldr	r3, [r7, #4]
 80002e2:	681b      	ldr	r3, [r3, #0]
 80002e4:	6859      	ldr	r1, [r3, #4]
 80002e6:	687b      	ldr	r3, [r7, #4]
 80002e8:	681b      	ldr	r3, [r3, #0]
 80002ea:	68fa      	ldr	r2, [r7, #12]
 80002ec:	430a      	orrs	r2, r1
 80002ee:	605a      	str	r2, [r3, #4]
		temp = 0;
 80002f0:	2300      	movs	r3, #0
 80002f2:	60fb      	str	r3, [r7, #12]

	//5. Alternate Function Configuration
		if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTFM)
 80002f4:	687b      	ldr	r3, [r7, #4]
 80002f6:	799b      	ldrb	r3, [r3, #6]
 80002f8:	2b02      	cmp	r3, #2
 80002fa:	d135      	bne.n	8000368 <GPIO_Init+0x194>
		{
			uint8_t temp1, temp2;
			temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber/8;
 80002fc:	687b      	ldr	r3, [r7, #4]
 80002fe:	791b      	ldrb	r3, [r3, #4]
 8000300:	08db      	lsrs	r3, r3, #3
 8000302:	72fb      	strb	r3, [r7, #11]
			temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber%8;
 8000304:	687b      	ldr	r3, [r7, #4]
 8000306:	791b      	ldrb	r3, [r3, #4]
 8000308:	f003 0307 	and.w	r3, r3, #7
 800030c:	72bb      	strb	r3, [r7, #10]
			pGPIOHandle->pGPIOx->AFR[temp1] &= (15<< pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << 4*temp2);
 800030e:	687b      	ldr	r3, [r7, #4]
 8000310:	681b      	ldr	r3, [r3, #0]
 8000312:	7afa      	ldrb	r2, [r7, #11]
 8000314:	3208      	adds	r2, #8
 8000316:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 800031a:	687b      	ldr	r3, [r7, #4]
 800031c:	7a5b      	ldrb	r3, [r3, #9]
 800031e:	461a      	mov	r2, r3
 8000320:	230f      	movs	r3, #15
 8000322:	fa03 f202 	lsl.w	r2, r3, r2
 8000326:	7abb      	ldrb	r3, [r7, #10]
 8000328:	009b      	lsls	r3, r3, #2
 800032a:	fa02 f303 	lsl.w	r3, r2, r3
 800032e:	4618      	mov	r0, r3
 8000330:	687b      	ldr	r3, [r7, #4]
 8000332:	681b      	ldr	r3, [r3, #0]
 8000334:	7afa      	ldrb	r2, [r7, #11]
 8000336:	4001      	ands	r1, r0
 8000338:	3208      	adds	r2, #8
 800033a:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
			pGPIOHandle->pGPIOx->AFR[temp1] |= (pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << 4*temp2);
 800033e:	687b      	ldr	r3, [r7, #4]
 8000340:	681b      	ldr	r3, [r3, #0]
 8000342:	7afa      	ldrb	r2, [r7, #11]
 8000344:	3208      	adds	r2, #8
 8000346:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 800034a:	687b      	ldr	r3, [r7, #4]
 800034c:	7a5b      	ldrb	r3, [r3, #9]
 800034e:	461a      	mov	r2, r3
 8000350:	7abb      	ldrb	r3, [r7, #10]
 8000352:	009b      	lsls	r3, r3, #2
 8000354:	fa02 f303 	lsl.w	r3, r2, r3
 8000358:	4618      	mov	r0, r3
 800035a:	687b      	ldr	r3, [r7, #4]
 800035c:	681b      	ldr	r3, [r3, #0]
 800035e:	7afa      	ldrb	r2, [r7, #11]
 8000360:	4301      	orrs	r1, r0
 8000362:	3208      	adds	r2, #8
 8000364:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		}



}
 8000368:	bf00      	nop
 800036a:	3714      	adds	r7, #20
 800036c:	46bd      	mov	sp, r7
 800036e:	bc80      	pop	{r7}
 8000370:	4770      	bx	lr

08000372 <GPIO_ToggleOutputPin>:
}

//----------------------------------------------------------------------------------------------

void GPIO_ToggleOutputPin   (GPIO_RegDef_t *pGPIOx, uint8_t PinNumber)
{
 8000372:	b480      	push	{r7}
 8000374:	b083      	sub	sp, #12
 8000376:	af00      	add	r7, sp, #0
 8000378:	6078      	str	r0, [r7, #4]
 800037a:	460b      	mov	r3, r1
 800037c:	70fb      	strb	r3, [r7, #3]
	    pGPIOx->ODR ^= (1 << PinNumber);
 800037e:	687b      	ldr	r3, [r7, #4]
 8000380:	695b      	ldr	r3, [r3, #20]
 8000382:	78fa      	ldrb	r2, [r7, #3]
 8000384:	2101      	movs	r1, #1
 8000386:	fa01 f202 	lsl.w	r2, r1, r2
 800038a:	405a      	eors	r2, r3
 800038c:	687b      	ldr	r3, [r7, #4]
 800038e:	615a      	str	r2, [r3, #20]
}
 8000390:	bf00      	nop
 8000392:	370c      	adds	r7, #12
 8000394:	46bd      	mov	sp, r7
 8000396:	bc80      	pop	{r7}
 8000398:	4770      	bx	lr
	...

0800039c <delay>:


#include"stm32f303xx_gpio_driver.h"

void delay(void)
{
 800039c:	b480      	push	{r7}
 800039e:	b083      	sub	sp, #12
 80003a0:	af00      	add	r7, sp, #0
	for(int i = 0; i<100000; ++i);
 80003a2:	2300      	movs	r3, #0
 80003a4:	607b      	str	r3, [r7, #4]
 80003a6:	e002      	b.n	80003ae <delay+0x12>
 80003a8:	687b      	ldr	r3, [r7, #4]
 80003aa:	3301      	adds	r3, #1
 80003ac:	607b      	str	r3, [r7, #4]
 80003ae:	687b      	ldr	r3, [r7, #4]
 80003b0:	4a03      	ldr	r2, [pc, #12]	; (80003c0 <delay+0x24>)
 80003b2:	4293      	cmp	r3, r2
 80003b4:	ddf8      	ble.n	80003a8 <delay+0xc>
}
 80003b6:	bf00      	nop
 80003b8:	370c      	adds	r7, #12
 80003ba:	46bd      	mov	sp, r7
 80003bc:	bc80      	pop	{r7}
 80003be:	4770      	bx	lr
 80003c0:	0001869f 	.word	0x0001869f

080003c4 <main>:

int main(void)
{
 80003c4:	b580      	push	{r7, lr}
 80003c6:	b084      	sub	sp, #16
 80003c8:	af00      	add	r7, sp, #0
	GPIOB_CLK_EN();
 80003ca:	4b0b      	ldr	r3, [pc, #44]	; (80003f8 <main+0x34>)
 80003cc:	695b      	ldr	r3, [r3, #20]
 80003ce:	4a0a      	ldr	r2, [pc, #40]	; (80003f8 <main+0x34>)
 80003d0:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 80003d4:	6153      	str	r3, [r2, #20]

	GPIO_Handle_t LedHandle;


	LedHandle.pGPIOx = GPIOB;
 80003d6:	4b09      	ldr	r3, [pc, #36]	; (80003fc <main+0x38>)
 80003d8:	607b      	str	r3, [r7, #4]
	LedHandle.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_3;
 80003da:	2303      	movs	r3, #3
 80003dc:	723b      	strb	r3, [r7, #8]
	LedHandle.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OU;
 80003de:	2301      	movs	r3, #1
 80003e0:	72bb      	strb	r3, [r7, #10]

	GPIO_Init(&LedHandle);
 80003e2:	1d3b      	adds	r3, r7, #4
 80003e4:	4618      	mov	r0, r3
 80003e6:	f7ff fef5 	bl	80001d4 <GPIO_Init>

	while(1){

	GPIO_ToggleOutputPin(GPIOB,GPIO_PIN_NO_3);
 80003ea:	2103      	movs	r1, #3
 80003ec:	4803      	ldr	r0, [pc, #12]	; (80003fc <main+0x38>)
 80003ee:	f7ff ffc0 	bl	8000372 <GPIO_ToggleOutputPin>
	delay();
 80003f2:	f7ff ffd3 	bl	800039c <delay>
	GPIO_ToggleOutputPin(GPIOB,GPIO_PIN_NO_3);
 80003f6:	e7f8      	b.n	80003ea <main+0x26>
 80003f8:	40021000 	.word	0x40021000
 80003fc:	48000400 	.word	0x48000400

08000400 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000400:	480d      	ldr	r0, [pc, #52]	; (8000438 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000402:	4685      	mov	sp, r0

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000404:	480d      	ldr	r0, [pc, #52]	; (800043c <LoopForever+0x6>)
  ldr r1, =_edata
 8000406:	490e      	ldr	r1, [pc, #56]	; (8000440 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000408:	4a0e      	ldr	r2, [pc, #56]	; (8000444 <LoopForever+0xe>)
  movs r3, #0
 800040a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800040c:	e002      	b.n	8000414 <LoopCopyDataInit>

0800040e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800040e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000410:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000412:	3304      	adds	r3, #4

08000414 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000414:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000416:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000418:	d3f9      	bcc.n	800040e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800041a:	4a0b      	ldr	r2, [pc, #44]	; (8000448 <LoopForever+0x12>)
  ldr r4, =_ebss
 800041c:	4c0b      	ldr	r4, [pc, #44]	; (800044c <LoopForever+0x16>)
  movs r3, #0
 800041e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000420:	e001      	b.n	8000426 <LoopFillZerobss>

08000422 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000422:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000424:	3204      	adds	r2, #4

08000426 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000426:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000428:	d3fb      	bcc.n	8000422 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit
 800042a:	f3af 8000 	nop.w
/* Call static constructors */
  bl __libc_init_array
 800042e:	f000 f811 	bl	8000454 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000432:	f7ff ffc7 	bl	80003c4 <main>

08000436 <LoopForever>:

LoopForever:
    b LoopForever
 8000436:	e7fe      	b.n	8000436 <LoopForever>
  ldr   r0, =_estack
 8000438:	20003000 	.word	0x20003000
  ldr r0, =_sdata
 800043c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000440:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000444:	080004bc 	.word	0x080004bc
  ldr r2, =_sbss
 8000448:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 800044c:	2000001c 	.word	0x2000001c

08000450 <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000450:	e7fe      	b.n	8000450 <ADC1_2_IRQHandler>
	...

08000454 <__libc_init_array>:
 8000454:	b570      	push	{r4, r5, r6, lr}
 8000456:	4e0d      	ldr	r6, [pc, #52]	; (800048c <__libc_init_array+0x38>)
 8000458:	4c0d      	ldr	r4, [pc, #52]	; (8000490 <__libc_init_array+0x3c>)
 800045a:	1ba4      	subs	r4, r4, r6
 800045c:	10a4      	asrs	r4, r4, #2
 800045e:	2500      	movs	r5, #0
 8000460:	42a5      	cmp	r5, r4
 8000462:	d109      	bne.n	8000478 <__libc_init_array+0x24>
 8000464:	4e0b      	ldr	r6, [pc, #44]	; (8000494 <__libc_init_array+0x40>)
 8000466:	4c0c      	ldr	r4, [pc, #48]	; (8000498 <__libc_init_array+0x44>)
 8000468:	f000 f818 	bl	800049c <_init>
 800046c:	1ba4      	subs	r4, r4, r6
 800046e:	10a4      	asrs	r4, r4, #2
 8000470:	2500      	movs	r5, #0
 8000472:	42a5      	cmp	r5, r4
 8000474:	d105      	bne.n	8000482 <__libc_init_array+0x2e>
 8000476:	bd70      	pop	{r4, r5, r6, pc}
 8000478:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 800047c:	4798      	blx	r3
 800047e:	3501      	adds	r5, #1
 8000480:	e7ee      	b.n	8000460 <__libc_init_array+0xc>
 8000482:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8000486:	4798      	blx	r3
 8000488:	3501      	adds	r5, #1
 800048a:	e7f2      	b.n	8000472 <__libc_init_array+0x1e>
 800048c:	080004b4 	.word	0x080004b4
 8000490:	080004b4 	.word	0x080004b4
 8000494:	080004b4 	.word	0x080004b4
 8000498:	080004b8 	.word	0x080004b8

0800049c <_init>:
 800049c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800049e:	bf00      	nop
 80004a0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80004a2:	bc08      	pop	{r3}
 80004a4:	469e      	mov	lr, r3
 80004a6:	4770      	bx	lr

080004a8 <_fini>:
 80004a8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80004aa:	bf00      	nop
 80004ac:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80004ae:	bc08      	pop	{r3}
 80004b0:	469e      	mov	lr, r3
 80004b2:	4770      	bx	lr
